"""initial migration

Revision ID: 34ebf7e7b571
Revises: d72e73f64f40
Create Date: 2025-08-18 20:58:40.617676

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "34ebf7e7b571"
down_revision: Union[str, Sequence[str], None] = "d72e73f64f40"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permissions",
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_permissions")),
        sa.UniqueConstraint("code", name=op.f("uq_permissions_code")),
    )
    op.create_table(
        "roles",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_roles")),
        sa.UniqueConstraint("name", name=op.f("uq_roles_name")),
    )
    op.create_table(
        "roles_permissions_table",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
            name=op.f("fk_roles_permissions_table_permission_id_permissions"),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name=op.f("fk_roles_permissions_table_role_id_roles"),
        ),
        sa.PrimaryKeyConstraint(
            "role_id", "permission_id", name=op.f("pk_roles_permissions_table")
        ),
    )
    op.add_column("users", sa.Column("name", sa.String(), nullable=False))
    op.add_column("users", sa.Column("role_id", sa.Integer(), nullable=False))
    op.add_column(
        "users", sa.Column("created_at", sa.DateTime(), nullable=False)
    )
    op.create_foreign_key(
        op.f("fk_users_role_id_roles"), "users", "roles", ["role_id"], ["id"]
    )
    op.drop_column("users", "is_superuser")
    op.drop_column("users", "is_active")
    op.drop_column("users", "is_verified")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "is_verified", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_users_role_id_roles"), "users", type_="foreignkey"
    )
    op.drop_column("users", "created_at")
    op.drop_column("users", "role_id")
    op.drop_column("users", "name")
    op.drop_table("roles_permissions_table")
    op.drop_table("roles")
    op.drop_table("permissions")
    # ### end Alembic commands ###
