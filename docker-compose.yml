services:
  app_auth:
    build:
      dockerfile: Docker-build/auth/Dockerfile
      context: .
    working_dir: /auth
    environment:
      APP_CONFIG__DB__URL: postgresql+asyncpg://user:qwe@pg:5432/julyberries_auth
    ports:
      - "5353:8000"
    depends_on:
      pg:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./auth
          target: /app_auth
        - action: rebuild
          path: auth/poetry.lock

  catalogs_services:
    build:
      dockerfile: Docker-build/catalog/Dockerfile
      context: .
    working_dir: /catalogs_services
    environment:
      APP_CONFIG__DB__URL: postgresql+asyncpg://user:qwe@pg:5432/julyberries_catalog
    ports:
      - "5354:8000"
    depends_on:
      pg:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./catalogs_services
          target: /catalogs_services
        - action: rebuild
          path: catalogs_services/poetry.lock

  orders_service:
    build:
      dockerfile: Docker-build/order/Dockerfile
      context: .
    working_dir: /orders_service
    environment:
      APP_CONFIG__DB__URL: postgresql+asyncpg://user:qwe@pg:5432/julyberries_order
    ports:
      - "5355:8000"
    depends_on:
      pg:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./orders_service
          target: /orders_service
        - action: rebuild
          path: orders_service/poetry.lock

  pg:
    image: postgres
    environment:
      POSTGRES_DB: julyberries
      POSTGRES_USER: user
      POSTGRES_PASSWORD: qwe
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3


  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      pg:
        condition: service_healthy

volumes:
  pgdata: